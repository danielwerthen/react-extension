{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["export type ExtensionFunction<P extends {}> = (\n  tagName: React.FunctionComponent<P> | React.ComponentClass<P> | string,\n  props?: (React.Attributes & P) | null,\n  ...children: React.ReactNode[]\n) => [\n  React.FunctionComponent<P> | React.ComponentClass<P> | string,\n  (React.Attributes & P) | null | undefined,\n  React.ReactNode[]\n];\n\nconst STORE_KEY = Symbol.for(\"@dwerthen/react-extension/Store\");\nconst globalSymbols = Object.getOwnPropertySymbols(global);\nconst hasContext = globalSymbols.indexOf(STORE_KEY) > -1;\n\nif (!hasContext) {\n  (global as any)[STORE_KEY] = [];\n}\n\nexport const store: [ExtensionFunction<{}>, Symbol][] = (global as any)[\n  STORE_KEY\n];\n\nexport const applyExtensions = (\n  createElement: any,\n  type: React.ElementType,\n  props: Object,\n  ...children: React.ReactNode[]\n) => {\n  const [nextTag, nextProps, nextChildren] = store.reduce(\n    (\n      [tag, props, children]: [\n        React.FunctionComponent<{}> | React.ComponentClass<{}> | string,\n        (React.Attributes & {}) | null | undefined,\n        React.ReactNode[]\n      ],\n      [fn]\n    ) => fn(tag, props, ...children),\n    [type, props, children]\n  );\n  return createElement(nextTag, nextProps, ...nextChildren);\n};\n\nexport function extend(reactModule: any) {\n  const oldCE = reactModule.createElement;\n  reactModule.createElement = (...args: any) =>\n    (applyExtensions as any)(oldCE, ...args);\n}\n\nexport type TeardownCallback = () => void;\n\nexport function registerExtension<P extends {}>(\n  fn: ExtensionFunction<P>\n): TeardownCallback {\n  const id = Symbol();\n  store.unshift([fn as ExtensionFunction<{}>, id]);\n  return () => {\n    const idx = store.findIndex(([_fn, sym]) => sym === id);\n    if (idx > -1) {\n      store.splice(idx, 1);\n    }\n  };\n}\n\nexport function registerPropExtension<P extends {}, T extends {}>(\n  fn: (props: P) => T\n) {\n  return registerExtension((tagName, props?, ...children) => {\n    return [\n      tagName,\n      typeof props === \"object\" ? fn(props as P) : props,\n      children,\n    ];\n  });\n}\n"],"names":["STORE_KEY","Symbol","for","Object","getOwnPropertySymbols","global","indexOf","store","applyExtensions","createElement","type","props","children","nextTag","nextProps","nextChildren","reduce","tag","fn","extend","reactModule","oldCE","args","registerExtension","id","unshift","idx","findIndex","_fn","sym","splice","registerPropExtension","tagName"],"mappings":"AAUA,MAAMA,EAAYC,OAAOC,IAAI,mCACPC,OAAOC,sBAAsBC,QAClBC,QAAQN,IAAc,IAGpDK,OAAeL,GAAa,IAGlBO,MAAAA,EAA4CF,OACvDL,GAGWQ,EAAkB,CAC7BC,EACAC,EACAC,KACGC,KAEH,MAAOC,EAASC,EAAWC,GAAgBR,EAAMS,OAC/C,EACGC,EAAKN,EAAOC,IAKZM,KACEA,EAAGD,EAAKN,KAAUC,GACvB,CAACF,EAAMC,EAAOC,IAEhB,OAAOH,EAAcI,EAASC,KAAcC,aAG9BI,EAAOC,GACrB,MAAMC,EAAQD,EAAYX,cAC1BW,EAAYX,cAAgB,IAAIa,IAC7Bd,EAAwBa,KAAUC,YAKvBC,EACdL,GAEA,MAAMM,EAAKvB,SAEX,OADAM,EAAMkB,QAAQ,CAACP,EAA6BM,IACrC,KACL,MAAME,EAAMnB,EAAMoB,UAAU,EAAEC,EAAKC,KAASA,IAAQL,GAChDE,GAAO,GACTnB,EAAMuB,OAAOJ,EAAK,aAKRK,EACdb,GAEA,OAAOK,EAAkB,CAACS,EAASrB,KAAWC,IACrC,CACLoB,EACiB,iBAAVrB,EAAqBO,EAAGP,GAAcA,EAC7CC"}